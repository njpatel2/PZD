spring.datasource.url=jdbc:sqlserver://localhost;databaseName=pzd;TrustServerCertificate=True
spring.datasource.username=PZDADMIN
spring.datasource.password=123456
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.show-sql=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update
spring.mvc.view.prefix: /WEB-INF/view/
spring.mvc.view.suffix: .jsp
server.error.whitelabel.enabled=false
server.error.path=/error
logging.level.root=info

#to set up tomcat path:
server.tomcat.basedir=C:/Users/nikun/PizzaDeliveryApp/Tomcat
#spring.web.resources.static-locations=classpath:/content/**
#spring.mvc.static-path-pattern=classpath:/**
#spring.resources.static-locations=classpath:/static/

#logging.level.org.springframework.web: DEBUG
#logging.level.org.hibernate: ERROR
#logging.level.org.springframework=DEBUG

#to set up SSL in local
#this will redirect http request to 8443 port 
server.port=8443
server.ssl.enabled=true
server.ssl.key-store: src/main/resources/mykeystore.p12
server.ssl.key-store-password: Satkaivalsaheb@360
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: mykey

#to send emails
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=gamemaker22799@gmail.com
#spring.mail.password=wburaeuzfmoxawyu
spring.mail.password=wftioxnuecrjoewq
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


#OAuth configuration
spring.security.oauth2.client.registration.google.client-id =783822071034-9rqhfhu9h60gf8dn8fsrv6octveisotn.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
#using this , you can access profile and email of user
spring.security.oauth2.client.registration.google.scope = profile,email
#spring.security.oauth2.client.registration.google.scope = profile,email,https://www.googleapis.com/auth/contacts
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/home
#security.oauth2.client.accessTokenUri =https://www.googleapis.com/oauth2/v3/token
#security.oauth2.client.userAuthorizationri = https://accounts.google.com/o/oauth2/auth 
#security.oauth2.client.tokenName = auth token
#security.oauth2.client.authenticationScheme = query
#security.oauth2.client.clientAuthenticationScheme = form
#
##using this , you can access profile and email of user

#security.outh2.resource.userInfoUri=https://www.googleapis.com/userinfo/v2/me
#security.oauth2.resource.preferTokenInfo = false
